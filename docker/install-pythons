#!/usr/bin/env python3.8
from __future__ import annotations

import argparse
import hashlib
import os.path
import platform
import re
import secrets
import subprocess
import sys
import tempfile

# gsutil cp gs://sentry-dev-infra-assets/prebuilt-pythons/python-{3.8.15+0,3.9.15+0,3.10.8+0,3.11.0+0}.sha256sums -
CHECKSUMS = """\
6e41eca73ba5565b31aebfd168cc2204c7d055cbcfd13be32c6591d7791a7aca  python-3.8.16+0-macosx_12_0_arm64.tgz
a429fac0c0559b93f907dfa7cd370b1b69a84bbe5bec79fab69c312ff56564ab  python-3.8.16+0-macosx_12_0_x86_64.tgz
eabf3e7d1543a61d5de1ebb87f860bae988e044fbd69c76991d1c0d356f6eec1  python-3.8.16+0-manylinux_2_28_aarch64.tgz
a66da18495a40464969e165592729ec36954c3a67971561d6d595406ff7acd2d  python-3.8.16+0-manylinux_2_28_x86_64.tgz
24e0e6a5f0441ec6a037d55930b201c46eefb4559945ded8f670211680c03fe9  python-3.9.16+0-macosx_12_0_arm64.tgz
e08d2874414df8dd1a44a507339884266de5193dd9e637375c7c16ddfc3296e7  python-3.9.16+0-macosx_12_0_x86_64.tgz
acfa20f500332e6f3c4d900db611ba069b52965973c77b03a8af5c774cf51730  python-3.9.16+0-manylinux_2_28_aarch64.tgz
0a50b871ab5ff2e945a461f00589089c944ffee7f049c8c06be7a15e86745fc1  python-3.9.16+0-manylinux_2_28_x86_64.tgz
503f2b82d52647c322af626052995cded0a23899cca94600aa80eb193e4b926a  python-3.10.9+0-macosx_12_0_arm64.tgz
30c919dd9be7767488d7953946c6dd39d058571b85c280c7e33df2fb771149cc  python-3.10.9+0-macosx_12_0_x86_64.tgz
2ca822fa3c09e515dcbdcf7c8f4b091cc47b5c935b44083f69fd572580f9ceca  python-3.10.9+0-manylinux_2_28_aarch64.tgz
639fb9945dc8bccc821aff98595f877e0a50e273a1b352886c31908ce95e1098  python-3.10.9+0-manylinux_2_28_x86_64.tgz
ffdf9ade5d7023921a175294248003ac95f4c4ee6babb5c3d7f9f7650146a96e  python-3.11.1+0-macosx_12_0_arm64.tgz
951f381c4e286717b89a03bd8e217cb07f745727f101de21d4a048a08139ae3e  python-3.11.1+0-macosx_12_0_x86_64.tgz
42fba60f08fffc41e2a2eed0763eb8df57c7e79a56809d883c73efdc3dbba0e2  python-3.11.1+0-manylinux_2_28_aarch64.tgz
be999ab895e67ebf7b199108090c0c09a0fad6cd9f1034dd9bd15ba61f8ef05f  python-3.11.1+0-manylinux_2_28_x86_64.tgz
"""
VERSIONS = ("3.8.16+0", "3.9.16+0", "3.10.9+0", "3.11.1+0")
PLAT_TAG = {"linux": "manylinux", "darwin": "macosx"}
PLAT_RE = re.compile(f"{PLAT_TAG[sys.platform]}_.+{platform.machine()}$")


def _checksum_url(version: str) -> tuple[str, str]:
    for line in CHECKSUMS.splitlines():
        sha256, filename = line.split()
        base, _ = os.path.splitext(filename)
        _, f_version, plat = base.split("-")
        if version == f_version and PLAT_RE.match(plat):
            return (
                sha256,
                f"https://storage.googleapis.com/sentry-dev-infra-assets/prebuilt-pythons/{filename}",
            )
    else:
        raise NotImplementedError(version, sys.platform, platform.machine())


def main() -> int:
    parser = argparse.ArgumentParser()
    parser.add_argument("--dest", default="/opt/python")
    args = parser.parse_args()

    os.makedirs(args.dest, exist_ok=True)

    for version in VERSIONS:
        with tempfile.TemporaryDirectory() as tmpdir:
            expected, url = _checksum_url(version)

            major, minor, *_ = version.split(".")
            dest = os.path.join(args.dest, f"cp{major}{minor}-cp{major}{minor}")
            tgz_dest = os.path.join(tmpdir, "python.tgz")

            curl_cmd = ("curl", "--silent", "--location", "--output", tgz_dest, url)
            subprocess.check_call(curl_cmd)

            with open(tgz_dest, "rb") as f:
                sha256 = hashlib.sha256(f.read()).hexdigest()
            if not secrets.compare_digest(sha256, expected):
                raise AssertionError(f"checksum mismatch {sha256=} {expected=}")

            os.makedirs(dest, exist_ok=True)
            tar_cmd = ("tar", "-C", dest, "--strip-components=1", "-xf", tgz_dest)
            subprocess.check_call(tar_cmd)

            py = os.path.join(dest, "bin", "python3")
            subprocess.check_call((py, "-mensurepip"))
            subprocess.check_call((py, "-mpip", "install", "wheel==0.37.1"))
            subprocess.check_call((py, "--version", "--version"))

    return 0


if __name__ == "__main__":
    raise SystemExit(main())
