#!/usr/bin/env python3.8
from __future__ import annotations

import argparse
import hashlib
import os.path
import platform
import re
import secrets
import subprocess
import sys
import tempfile

# gsutil cp gs://sentry-dev-infra-assets/prebuilt-pythons/python-{3.8.15+0,3.9.15+0,3.10.8+0,3.11.0+0}.sha256sums -
CHECKSUMS = """\
1f2faa5c2dbc0960206869661e388a06a23b6aabd8844e589a2d6750ce18eca9  python-3.8.15+0-macosx_12_0_arm64.tgz
c04ee433f3848693adbf37aa0632cf2da6e2f1a636bb4c3b5a10b0380e15a24a  python-3.8.15+0-macosx_12_0_x86_64.tgz
6a1ebda2769097ecf3288ad98c4d2b4be3218661428f0addd4e9f716a2a62e9c  python-3.8.15+0-manylinux_2_28_aarch64.tgz
fa31c4a08c4df4a932934998d1e2b982249d7ae5261eb529fb279f9df32dce4f  python-3.8.15+0-manylinux_2_28_x86_64.tgz
08008bd0b44afbfb3bf6c15007b391a53fe46336b9502d7c715331bd83afbced  python-3.9.15+0-macosx_12_0_arm64.tgz
586fd9e52d55d4736a823b4f917921b277290a1dfb37fd7d9725bd45efd17840  python-3.9.15+0-macosx_12_0_x86_64.tgz
26f6d850ab753bc016a9d3e658b5e63dd2fca3bbd90d6a7dd8bbe2f3f8e8cf88  python-3.9.15+0-manylinux_2_28_aarch64.tgz
f66a3f23e555b59dcc243ea7647c3f45a12c5c15f97241edc8c1442149afe32f  python-3.9.15+0-manylinux_2_28_x86_64.tgz
34cf84f4d75ee6e4cd9a21ace57125e3202f9591bf1792170c314cf16d120d8c  python-3.10.8+0-macosx_12_0_arm64.tgz
772b54568ab5b18749032f94e056db5ff595d02a3c839da464fb932ba3184f65  python-3.10.8+0-macosx_12_0_x86_64.tgz
a9ad210a75c7df3fcb0465996a11275436c1e5db332ca4b42123cef86ed4b89d  python-3.10.8+0-manylinux_2_28_aarch64.tgz
200b4506b7540826249f10177f7eada556a7df33c604aa8638e5b39d6a119dd9  python-3.10.8+0-manylinux_2_28_x86_64.tgz
c08d4f5f5ad3c2b69e5a41859f3271719112d6863acf2b4f7d9dee1963ff1456  python-3.11.0+0-macosx_12_0_arm64.tgz
9e2d7f568c450fdaa105c1f34172a19c4b2ff85a8cb14129aa57522d78403e06  python-3.11.0+0-macosx_12_0_x86_64.tgz
f06b69135a658d5f8f3aff9280286dedc890eafd90d9ae50706254cee8d11d90  python-3.11.0+0-manylinux_2_28_aarch64.tgz
d8f3d369fa7a02d3452ecb226a0423be6ee92e929983e5b3a5925fd75b933522  python-3.11.0+0-manylinux_2_28_x86_64.tgz
"""
VERSIONS = ("3.8.15+0", "3.9.15+0", "3.10.8+0", "3.11.0+0")
PLAT_TAG = {"linux": "manylinux", "darwin": "macosx"}
PLAT_RE = re.compile(f"{PLAT_TAG[sys.platform]}_.+{platform.machine()}$")


def _checksum_url(version: str) -> tuple[str, str]:
    for line in CHECKSUMS.splitlines():
        sha256, filename = line.split()
        base, _ = os.path.splitext(filename)
        _, f_version, plat = base.split("-")
        if version == f_version and PLAT_RE.match(plat):
            return (
                sha256,
                f"https://storage.googleapis.com/sentry-dev-infra-assets/prebuilt-pythons/{filename}",
            )
    else:
        raise NotImplementedError(version, sys.platform, platform.machine())


def main() -> int:
    parser = argparse.ArgumentParser()
    parser.add_argument("--dest", default="/opt/python")
    args = parser.parse_args()

    os.makedirs(args.dest, exist_ok=True)

    for version in VERSIONS:
        with tempfile.TemporaryDirectory() as tmpdir:
            expected, url = _checksum_url(version)

            major, minor, *_ = version.split(".")
            dest = os.path.join(args.dest, f"cp{major}{minor}-cp{major}{minor}")
            tgz_dest = os.path.join(tmpdir, "python.tgz")

            curl_cmd = ("curl", "--silent", "--location", "--output", tgz_dest, url)
            subprocess.check_call(curl_cmd)

            with open(tgz_dest, "rb") as f:
                sha256 = hashlib.sha256(f.read()).hexdigest()
            if not secrets.compare_digest(sha256, expected):
                raise AssertionError(f"checksum mismatch {sha256=} {expected=}")

            os.makedirs(dest, exist_ok=True)
            tar_cmd = ("tar", "-C", dest, "--strip-components=1", "-xf", tgz_dest)
            subprocess.check_call(tar_cmd)

            py = os.path.join(dest, "bin", "python3")
            subprocess.check_call((py, "-mensurepip"))
            subprocess.check_call((py, "-mpip", "install", "wheel==0.37.1"))
            subprocess.check_call((py, "--version", "--version"))

    return 0


if __name__ == "__main__":
    raise SystemExit(main())
