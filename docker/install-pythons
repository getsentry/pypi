#!/usr/bin/env python3.11
from __future__ import annotations

import argparse
import hashlib
import os.path
import platform
import re
import secrets
import subprocess
import sys
import tempfile

RELEASE = (
    "https://github.com/indygreg/python-build-standalone/releases/download/20241016/"
)
# curl --silent --location https://github.com/indygreg/python-build-standalone/releases/download/20241016/SHA256SUMS | grep -E '(aarch64-apple-darwin-pgo\+lto-full|x86_64-apple-darwin-pgo\+lto-full|aarch64-unknown-linux-gnu-lto-full|x86_64-unknown-linux-gnu-pgo\+lto-full)' | grep -Ev 'cpython-3\.(8|9|10)'
CHECKSUMS = """\
afac902c6498cda4095674344b6defbff4500a3687aea597b3710cd070b62756  cpython-3.11.10+20241016-aarch64-apple-darwin-pgo+lto-full.tar.zst
4aa77466ca61b0a3263e3bf55be911cc72f30fd33c81d545f13782b1a35daeec  cpython-3.11.10+20241016-aarch64-unknown-linux-gnu-lto-full.tar.zst
672a3d428359c3edd2155bf9d9939e0f51803fe3c81f1643e021d9970f01fbdd  cpython-3.11.10+20241016-x86_64-apple-darwin-pgo+lto-full.tar.zst
36498e63788f5a03c0d6249a5df77fbca542bf066eaa6dbb8bbf516194f96e9b  cpython-3.11.10+20241016-x86_64-unknown-linux-gnu-pgo+lto-full.tar.zst
3f8bf335c97424d0be262687906b0f50511f22fede8b9be77363faa57c4b8e7f  cpython-3.12.7+20241016-aarch64-apple-darwin-pgo+lto-full.tar.zst
bd7688441ddf8d5dc2ccb288bb31fb862330999a4a3f1544aa4f999c93b85a6a  cpython-3.12.7+20241016-aarch64-unknown-linux-gnu-lto-full.tar.zst
4ae54498bd8d17fc8689fc57c7dadd59c625834af1b5f81fa21f943ff0e37643  cpython-3.12.7+20241016-x86_64-apple-darwin-pgo+lto-full.tar.zst
a3709fb5350bff838bd7bb5dc18e67300c76dc3e5cd11f9c84e54c8aeac60784  cpython-3.12.7+20241016-x86_64-unknown-linux-gnu-pgo+lto-full.tar.zst
542e5ffac0b90dc1d872ba8157c0e96861b339b73a20eb21c53242f8c92e043c  cpython-3.13.0+20241016-aarch64-apple-darwin-pgo+lto-full.tar.zst
dab453a00cc921bb9b27db1ea23a7071381ee6b0fb04c5bc299ff9d03c020320  cpython-3.13.0+20241016-aarch64-unknown-linux-gnu-lto-full.tar.zst
1c1262a5105c1ad725c18b15979fb057b699e7b3c5c158d2af9b9c59ad29157b  cpython-3.13.0+20241016-x86_64-apple-darwin-pgo+lto-full.tar.zst
078de2a3eef67377684e5054cbb059aa3f53d3189b2e19ab022f6b6242de014b  cpython-3.13.0+20241016-x86_64-unknown-linux-gnu-pgo+lto-full.tar.zst
"""
VERSIONS = ("3.11.10", "3.12.7", "3.13.0")
ARCH_MAP = {"arm64": "aarch64"}
ARCH = ARCH_MAP.get(platform.machine(), platform.machine())

CLANG_PP = re.compile(r"\bclang\+\+")
CLANG = re.compile(r"\bclang\b")


def _must_sub(reg: re.Pattern[str], new: str, s: str) -> str:
    after = reg.sub(new, s)
    if after == s:
        raise AssertionError(f"expected replacement by {reg} => {new}!")
    return after


def _checksum_url(version: str) -> tuple[str, str]:
    for line in CHECKSUMS.splitlines():
        sha256, filename = line.split()
        _, f_version_release, arch, _, plat, *_ = filename.split("-")
        f_version, _ = f_version_release.split("+")
        if version == f_version and sys.platform == plat and ARCH == arch:
            return (sha256, f"{RELEASE}/{filename}")
    else:
        raise NotImplementedError(version, sys.platform, platform.machine())


def main() -> int:
    parser = argparse.ArgumentParser()
    parser.add_argument("--dest", default="/opt/python")
    args = parser.parse_args()

    os.makedirs(args.dest, exist_ok=True)

    for version in VERSIONS:
        with tempfile.TemporaryDirectory() as tmpdir:
            expected, url = _checksum_url(version)

            major, minor, *_ = version.split(".")
            dest = os.path.join(args.dest, f"cp{major}{minor}-cp{major}{minor}")
            tgz_dest = os.path.join(tmpdir, "python.tgz")

            curl_cmd = ("curl", "--silent", "--location", "--output", tgz_dest, url)
            subprocess.check_call(curl_cmd)

            with open(tgz_dest, "rb") as f:
                sha256 = hashlib.sha256(f.read()).hexdigest()
            if not secrets.compare_digest(sha256, expected):
                raise AssertionError(f"checksum mismatch {sha256=} {expected=}")

            os.makedirs(dest, exist_ok=True)
            tar_cmd = (
                "tar",
                "-C",
                dest,
                "--strip-components=2",
                "-xf",
                tgz_dest,
                "python/install",
            )
            subprocess.check_call(tar_cmd)

            # https://github.com/indygreg/python-build-standalone/issues/209
            if sys.platform == "linux" and ARCH == "x86_64":
                for fname in (
                    f"{dest}/lib/python{major}.{minor}/config-{major}.{minor}-x86_64-linux-gnu/Makefile",
                    f"{dest}/lib/python{major}.{minor}/_sysconfigdata__linux_x86_64-linux-gnu.py",
                ):
                    print(f"XXX: fixing up build metadata in {fname}")
                    with open(fname) as f:
                        contents = f.read()
                    contents = _must_sub(CLANG_PP, "c++", contents)
                    contents = _must_sub(CLANG, "cc", contents)
                    with open(fname, "w") as f:
                        f.write(contents)

            py = os.path.join(dest, "bin", "python3")
            subprocess.check_call((py, "-mensurepip"))
            subprocess.check_call(
                (
                    *(py, "-mpip", "install"),
                    *("pip==23.1.2", "setuptools==67.8.0", "wheel==0.40.0"),
                )
            )
            subprocess.check_call((py, "--version", "--version"))

    return 0


if __name__ == "__main__":
    raise SystemExit(main())
