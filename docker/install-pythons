#!/usr/bin/env python3.8
from __future__ import annotations

import argparse
import os.path
import platform
import subprocess
import tempfile

PY = (
    (
        "3.8.13+1",
        {
            "aarch64": "6efcad0a2e02625291597883d026b11c8f8cfa842642fd795cf1cb4a3c9e28b5",
            "x86_64": "0b77405d69976ae45e3d054b11527d3b81c113478e0eed058251238be92b72be",
        },
    ),
    (
        "3.9.13+1",
        {
            "aarch64": "86b4c02878a82fbb88f391086d90cbe33cb928ab79282de54362e169e64021a4",
            "x86_64": "106174840735a35d9441d699e358aec20e52c00afa8f87a34869595c5d367a3e",
        },
    ),
    (
        "3.10.5+1",
        {
            "aarch64": "c661c92558e7badc25d58f5d8f6c0ad648dfe6195373148f19e9aab5c1167797",
            "x86_64": "5355312b9c1b882d8d576741ec5dcd902bc729c705c8a7ce5e387180d7951f81",
        },
    ),
)


def main() -> int:
    parser = argparse.ArgumentParser()
    parser.add_argument("--dest", default="/opt/python")
    args = parser.parse_args()

    os.makedirs(args.dest, exist_ok=True)

    arch = platform.machine()
    _, libc = platform.libc_ver()
    libc = libc.replace(".", "_")

    with tempfile.TemporaryDirectory() as tmpdir:
        for version, hashes in PY:
            expected = hashes[arch]

            major, minor, *_ = version.split(".")
            dest = os.path.join(args.dest, f"cp{major}{minor}-cp{major}{minor}")

            archive_name = f"python-{version}-manylinux_{libc}_{arch}.tgz"
            url = f"https://storage.googleapis.com/sentry-dev-infra-assets/prebuilt-pythons/{archive_name}"
            tgz_dest = os.path.join(tmpdir, archive_name)

            curl_cmd = ("curl", "--silent", "--location", "--output", tgz_dest, url)
            subprocess.check_call(curl_cmd)

            check = f"{expected}  {tgz_dest}\n".encode()
            sha256sum_cmd = ("sha256sum", "--check", "--quiet", "-")
            subprocess.run(sha256sum_cmd, check=True, input=check)

            os.makedirs(dest, exist_ok=True)
            tar_cmd = ("tar", "-C", dest, "--strip-components=1", "-xf", tgz_dest)
            subprocess.check_call(tar_cmd)

            py = os.path.join(dest, "bin", "python3")
            subprocess.check_call((py, "-mensurepip"))
            subprocess.check_call((py, "-mpip", "install", "wheel==0.37.1"))
            subprocess.check_call((py, "--version", "--version"))

    return 0


if __name__ == "__main__":
    raise SystemExit(main())
