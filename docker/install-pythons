#!/usr/bin/env python3.10
from __future__ import annotations

import argparse
import hashlib
import os.path
import platform
import secrets
import subprocess
import sys
import tempfile

RELEASE = (
    "https://github.com/indygreg/python-build-standalone/releases/download/20231002/"
)
# curl --silent --location https://github.com/indygreg/python-build-standalone/releases/download/20231002/SHA256SUMS | grep -E '(aarch64-apple-darwin-pgo\+lto-full|x86_64-apple-darwin-pgo\+lto-full|aarch64-unknown-linux-gnu-lto-full|x86_64-unknown-linux-gnu-pgo\+lto-full)'
CHECKSUMS = """\
a2635841454295c5bc2c18740346fd8308f2a8adcce2407b87c9faf261fed29c  cpython-3.10.13+20231002-aarch64-apple-darwin-pgo+lto-full.tar.zst
94378303df7117f80c6832979d21295413148e46cbab5f737a403f8b21b30335  cpython-3.10.13+20231002-aarch64-unknown-linux-gnu-lto-full.tar.zst
e7db06af69f8a51b05f9f82032957d08c07cf75a06a3db6973aa0d4a05d2a95c  cpython-3.10.13+20231002-x86_64-apple-darwin-pgo+lto-full.tar.zst
a28cc6d21373a41256cd176bd2f77a3190eb12f132602d344afc3dba6fa454c9  cpython-3.10.13+20231002-x86_64-unknown-linux-gnu-pgo+lto-full.tar.zst
6e9007bcbbf51203e89c34a87ed42561630a35bc4eb04a565c92ba7159fe5826  cpython-3.11.6+20231002-aarch64-apple-darwin-pgo+lto-full.tar.zst
7c621a748a4fd6ae99d8ba7ec2da59173d31475838382a13df6d2b1bf95a7059  cpython-3.11.6+20231002-aarch64-unknown-linux-gnu-lto-full.tar.zst
3685156e4139e89484c071ba1a1b85be0b4e302a786de5a170d3b0713863c2e8  cpython-3.11.6+20231002-x86_64-apple-darwin-pgo+lto-full.tar.zst
6da291720c9fe2f63c5c55f7acc8b6094a05488453a84cfcc012e92305099ee7  cpython-3.11.6+20231002-x86_64-unknown-linux-gnu-pgo+lto-full.tar.zst
25fc8cd41e975d18d13bcc8f8beffa096ff8a0b86c4a737e1c6617900092c966  cpython-3.12.0+20231002-aarch64-apple-darwin-pgo+lto-full.tar.zst
86e16b6defbbd7db0b7f98879b2b381e0e5b0ec07126cb9f5fc0cafe9869dc36  cpython-3.12.0+20231002-aarch64-unknown-linux-gnu-lto-full.tar.zst
3b4781e7fd4efabe574ba0954e54c35c7d5ac4dc5b2990b40796c1c6aec67d79  cpython-3.12.0+20231002-x86_64-apple-darwin-pgo+lto-full.tar.zst
5ce861907a2751a3a7395b1aaada830c2b072acc03f3dd0bcbaaa2b7a9166fc0  cpython-3.12.0+20231002-x86_64-unknown-linux-gnu-pgo+lto-full.tar.zst
10abf67384ea0728fff82782408f8e398bc17ef55985d6ebef2aaae319a7df31  cpython-3.8.18+20231002-aarch64-apple-darwin-pgo+lto-full.tar.zst
92ebfe81d78d4e28d8a02a29f540e4db785a5e9b51559d85013f57ffe3a6f985  cpython-3.8.18+20231002-aarch64-unknown-linux-gnu-lto-full.tar.zst
b89799abf243739a4ef5b71e7373e45e56e097aec0853b813aa31d1dcb68799e  cpython-3.8.18+20231002-x86_64-apple-darwin-pgo+lto-full.tar.zst
286910aea21d8c7a5b0ecda6214eec6c197122b7b738fdfd6ed59f7c0ba9f65f  cpython-3.8.18+20231002-x86_64-unknown-linux-gnu-pgo+lto-full.tar.zst
bdf883f6a6ba9ea1bd72029670737232bfbd9a07708d85dd2bf6a3deb2aa3a5d  cpython-3.9.18+20231002-aarch64-apple-darwin-pgo+lto-full.tar.zst
4cd4240b08e82e0b279152cd2afad556a0c8cd9ee3d285fe3a5770b5a934fe26  cpython-3.9.18+20231002-aarch64-unknown-linux-gnu-lto-full.tar.zst
0ee342ed3d6051a41e7702bec98db463c5ffe4dcb634e10cae464e42adb2fb3e  cpython-3.9.18+20231002-x86_64-apple-darwin-pgo+lto-full.tar.zst
02f5c6bf29f173fe1653965409b891691ab413e579766d3e5bccdc74634b9bde  cpython-3.9.18+20231002-x86_64-unknown-linux-gnu-pgo+lto-full.tar.zst
"""
VERSIONS = ("3.10.13", "3.11.6", "3.12.0")
ARCH_MAP = {"arm64": "aarch64"}
ARCH = ARCH_MAP.get(platform.machine(), platform.machine())


def _checksum_url(version: str) -> tuple[str, str]:
    for line in CHECKSUMS.splitlines():
        sha256, filename = line.split()
        _, f_version_release, arch, _, plat, *_ = filename.split("-")
        f_version, _ = f_version_release.split("+")
        if version == f_version and sys.platform == plat and ARCH == arch:
            return (sha256, f"{RELEASE}/{filename}")
    else:
        raise NotImplementedError(version, sys.platform, platform.machine())


def main() -> int:
    parser = argparse.ArgumentParser()
    parser.add_argument("--dest", default="/opt/python")
    args = parser.parse_args()

    os.makedirs(args.dest, exist_ok=True)

    for version in VERSIONS:
        with tempfile.TemporaryDirectory() as tmpdir:
            expected, url = _checksum_url(version)

            major, minor, *_ = version.split(".")
            dest = os.path.join(args.dest, f"cp{major}{minor}-cp{major}{minor}")
            tgz_dest = os.path.join(tmpdir, "python.tgz")

            curl_cmd = ("curl", "--silent", "--location", "--output", tgz_dest, url)
            subprocess.check_call(curl_cmd)

            with open(tgz_dest, "rb") as f:
                sha256 = hashlib.sha256(f.read()).hexdigest()
            if not secrets.compare_digest(sha256, expected):
                raise AssertionError(f"checksum mismatch {sha256=} {expected=}")

            os.makedirs(dest, exist_ok=True)
            tar_cmd = (
                "tar",
                "-C",
                dest,
                "--strip-components=2",
                "-xf",
                tgz_dest,
                "python/install",
            )
            subprocess.check_call(tar_cmd)

            py = os.path.join(dest, "bin", "python3")
            subprocess.check_call((py, "-mensurepip"))
            subprocess.check_call(
                (
                    *(py, "-mpip", "install"),
                    *("pip==23.1.2", "setuptools==67.8.0", "wheel==0.40.0"),
                )
            )
            subprocess.check_call((py, "--version", "--version"))

    return 0


if __name__ == "__main__":
    raise SystemExit(main())
