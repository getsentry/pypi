#!/usr/bin/env python3
from __future__ import annotations

import argparse
import os.path
import shlex
import subprocess

CACHE_ONE_HOUR = ("--cache-control", "public, max-age=3600")  # gcs default
CACHE_FIVE_MINUTES = ("--cache-control", "public, max-age=300")
CACHE_NO = ("--cache-control", "no-store")


def main() -> int:
    parser = argparse.ArgumentParser()
    parser.add_argument("--index", default="index")
    parser.add_argument("--dry-run", action="store_true")
    args = parser.parse_args()

    if not os.listdir(os.path.join(args.index, "wheels")):
        print("nothing to upload!")
        return 0

    cmds = (
        # upload wheels first before the index
        (
            "gcloud",
            "storage",
            "cp",
            "-n",  # no-clobber
            *CACHE_ONE_HOUR,  # these are immutable so cache at default
            os.path.join(args.index, "wheels", "*"),
            "gs://pypi.devinfra.sentry.io/wheels/",
        ),
        # upload the site parts in clobber mode (may be updating pages)
        (
            "gcloud",
            "storage",
            "cp",
            *CACHE_FIVE_MINUTES,  # shorter than default to make pip snappier
            "-r",  # recursive
            *(
                os.path.join(args.index, name)
                for name in os.listdir(args.index)
                if name not in ("wheels", "packages.json")
            ),
            "gs://pypi.devinfra.sentry.io",
        ),
        (
            "gcloud",
            "storage",
            "cp",
            # the packages.json file must be consistently read so no caching
            *CACHE_NO,
            os.path.join(args.index, "packages.json"),
            "gs://pypi.devinfra.sentry.io",
        ),
    )

    for cmd in cmds:
        if args.dry_run:
            print(f"would run: {shlex.join(cmd)}")
        else:
            subprocess.check_call(cmd)

    return 0


if __name__ == "__main__":
    raise SystemExit(main())
